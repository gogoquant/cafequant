# Makefile for python interface for package api.
# File is generated by gopy. Do not edit.
# gopy build snack.com/xiyanxiyan10/stocktrader/api

GOCMD=go
GOBUILD=$(GOCMD) build
GOIMPORTS=goimports
PYTHON=/usr/bin/python
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = -I/usr/include/python3.7m
LDFLAGS = -L/usr/lib -lpython3.7m -lcrypt -lpthread -ldl  -lutil -lm

all: gen build

gen:
	gopy gen -no-make snack.com/xiyanxiyan10/stocktrader/api

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm api.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w api.go
	# generate api_go$(LIBEXT) from api.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o api_go$(LIBEXT) api.go
	# use pybindgen to build the api.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# patch storage leaks in pybindgen output
	go run patch-leaks.go api.c
	# build the _api$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated api.py python wrapper imports this c-code package
	$(GCC) api.c  api_go$(LIBEXT) -o _api$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


